@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_LayoutOption.cshtml";
}

<header>
    <div class="header-content">
        <div class="header-content-inner">
    <h1 class="text-center">Texchange</h1>
            <hr />
            <p class="lead text-center">Borrow & lend textbooks at QUT.</p>
        </div>
        <div class="search-form">
            <form class="form-inline" role="form" action="/books" method="post" style="padding-top:8px;">
                <div class="form-group">
                    @Html.TextBox("searchQuery", "", new { name = "name", @id = "indexSearchControl", @class = "form-control home", style = "width: 250px;" })
                </div>
                <button type="submit" class="btn btn-default btn-transparent">Search</button>
            </form>
        </div>
</div>
</header>

@section scripts {
<script type="text/javascript">
    // Default search examples
    searchExamples = [
        "A Brief History of the Universe",
        "A Brief History of Time",
        "Stephen Hawking",
        "Learning Python",
        "Calculus 101",
        "Mark Lutz and David Ascher",
        "Economics for the New Student",
        "All About Water",
        "Networks and Their Uses",
        "Mysteries of Human Anatomy",
        "Calculus - Early Transcendentals",
        "Anton Bivens Davis",
        "Essential Business Process Modelling",
        "Publication Manual of the American Psychological Association"
    ];

    // Update search examples to match actual available books
    $.post('@Url.Action("ListAllBookTitles", "Books")',
        {
            quantity: 0
        },
        function (data, status) {
            searchExamples = data;
        }
    );

    // Generate a random number within the range of the examples array
    var randomNumber = function () {
        return Math.floor(Math.random() * searchExamples.length);
    }

    // Select a new example title to display
    var newSelection = function () {
        return "eg, " + searchExamples[randomNumber()];
    }
    
    // Start with an example title
    document.getElementById("indexSearchControl").placeholder = newSelection();

    // Variables for animation 
    currentSuggestion = newSelection();
    index = 0;

    // Animate "typing" the title one character at a time
    addLetter = function () {
        index++;
        if (index < 35) {
            currentSubstring = currentSuggestion.substr(0, index);
        } else {
            currentSubstring = currentSuggestion.substr(index - 34, index);
        }
        document.getElementById("indexSearchControl").placeholder = currentSubstring;

        if (index >= currentSuggestion.length) {
            currentSuggestion = newSelection();
            index = 0;
            window.setTimeout(addLetter, 7000);
        } else {
            if (currentSubstring.substring(index-1, index) == " ") {
                window.setTimeout(addLetter, 150);
            } else {
                window.setTimeout(addLetter, 70);
            }
        }
    }

    // Start the animation
    window.setTimeout(addLetter, 2000);
</script>

<script>
    // Autocomplete available book titles
    $(document).ready(function () {
        $('#indexSearchControl').autocomplete(
            {
                source: function (request, response) {
                    var titles = searchExamples.filter(function (value, index, ar) {
                        if (value.toLowerCase().search(request.term.toLowerCase()) == -1) {
                            return false;
                        }
                        return true;
                    });
                    if (titles.length > 5) {
                        titles = titles.slice(0, 5);
                    }
                    response(titles);
                }
            });
    });
</script>
}