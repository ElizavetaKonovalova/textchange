@model TextBooks.Models.PublicProfileViewModel

@{
    ViewBag.Title = "PublicProfile";
}
<br />
@Html.ValidationSummary("", new { @class = "text-danger" })
<div class="container">

    @if (Model.contactEmail != null)
    {
        if (Model.contactEmail.success == true)
        {
            <div class="alert alert-success alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <strong>Success!</strong> Your message has been sent.
            </div>
        }
        else
        {
            <div class="alert alert-warning alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <strong>Oops!</strong> Your message wasn't sent. Was it empty?
            </div>
        }
    }

    @using (Html.BeginForm("PublicProfile", "Account", new { userId = Model.targetUser.Id, something = 0, bookId = Model.bookID }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            <div class="panel panel-transparent col-xs-4" style="height:400px;">
                <div class="panel-body" style="color:black;">
                    @foreach (var comment in Model.AllComments)
                    {
                        <div class="jumbotron" style="background-color:#55b259;">

                            <div style="font:bold 14px arial;">
                                @Html.DisplayFor(model => comment.Comment)
                            </div>
                            <hr/>
                            <div style="font:bold 12px arial;">
                                Date: @Html.DisplayFor(model => comment.Date)
                                <br/>
                                From: @Html.DisplayFor(model => comment.Sender)
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div style="padding-right:30%;">
                <h1>
                    @Html.DisplayFor(model => model.targetUser.FirstName)
                    @Html.DisplayFor(model => model.targetUser.LastName)
                </h1>

                <hr />
            </div>

            <div class="col-xs-offset-5">
                <div>
                    <b>Rating:</b>
                    @if (Model.returned == true)
                    {
                        <span class="thumbs-up">
                            @Model.targetUser.ThumbsUp <button class="glyphicon glyphicon-thumbs-up " value="ThumbsUp" name="thumbs"></button>
                        </span>
                        <span class="thumbs-down">
                            @Model.targetUser.ThumbsDown <button class="glyphicon glyphicon-thumbs-up " value="ThumbsDown" name="thumbs"></button>
                        </span>
                        <div style="padding-top:10px;">
                            <button type="button" class="btn btn-default btn-danger" data-toggle="modal" data-target="#commentsModal">
                                Leave a comment
                            </button>
                        </div>
                    }
                    else
                    {
                        <span class="thumbs-up">
                            @Model.targetUser.ThumbsUp <span class="glyphicon glyphicon-thumbs-up" value="ThumbsUp" name="thumbs"></span>
                        </span>
                        <span class="thumbs-down">
                            @Model.targetUser.ThumbsDown <span class="glyphicon glyphicon-thumbs-down" value="ThumbsDown" name="thumbs"></span>
                        </span>
                    }
                </div>

                <br />
                <b>Email: </b> @Html.DisplayFor(model => model.targetUser.Email)<br />
                @if (Model.targetUser.PhoneNumber != null)
                {
                    <b>Phone: </b>@Html.DisplayFor(model => model.targetUser.PhoneNumber)<br />
                }
                else
                {
                    <em>No phone number listed.</em><br />
                }
                <br />

                <!-- Button trigger modal -->
                <button type="button" class="btn btn-default btn-transparent" data-toggle="modal" data-target="#myModal">
                    Send Email
                </button>
                @Html.ActionLink("Back to books", "../Books", "Index", new { @class = "btn btn-default btn-transparent" })
                <br />
                <br />
                <table>
                    <tr>
                        <th>
                            @Html.DisplayFor(model => model.targetUser.FirstName)'s Books:
                        </th>
                    </tr>
                    @if (Model.booksOwned == null)
                    {
                        <tr>
                            <td>
                                No books to show.
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var item in Model.booksOwned)
                        {
                            <tr>
                                <td>
                                    @Html.ActionLink((item.Title), "Details", "Books", new { id = item.B_ID, username = item.Owner }, null)
                                </td>
                            </tr>
                        }
                    }
                </table>
                <br />
                <table>
                    <tr>
                        <th>
                            @Html.DisplayFor(model => model.targetUser.FirstName) is Borrowing:
                        </th>
                    </tr>
                    @if (Model.booksBorrowed == null)
                    {
                        <tr>
                            <td>
                                No books at the moment.
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var item in Model.booksBorrowed)
                        {
                            <tr>
                                <td style="color:#0094ff">
                                    @Html.DisplayFor(model => item.Title)
                                </td>
                            </tr>
                        }
                    }
                </table>
                <br />
            </div>
        </div>
    }


    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <!--Get the user's name so that it can show up the top of the modal-->
                    @{
                        string toUserFullName = Model.targetUser.FirstName + " " + Model.targetUser.LastName;
                    }
                    <h4 class="modal-title modal-text" id="myModalLabel">Contact @toUserFullName</h4>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("ContactUser", "Account", new { toUsername = Model.targetUser.UserName }, FormMethod.Post, new { id = "modal-form" }))
                    {
                        <p class="modal-text">Hi @Model.targetUser.FirstName,</p>
                        <!--This is where the user types in their message-->
                        @Html.TextAreaFor(model => model.contactEmail.message,
                            new
                            {
                                @class = "form-control col-md-12",
                                @style = "min-width: 100%; resize:none;",
                                @placeholder = "Type your message for " + Model.targetUser.FirstName + " here.",
                                @rows = "8"
                            })
                    }
                </div>
                <div class="modal-footer modal-text">
                    <!--Cancel and submit buttons. Not sure if it should be a button or just input-->
                    <div class="col-xs-12" style="padding-top:10px;">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <input id="btn-submit" class="btn btn-primary" type="submit" value="Send Message" />
                    </div>
                        <script type="text/javascript">
                            document.getElementById("btn-submit").onclick = function () {
                                var form = document.getElementById("modal-form");
                                form.submit();
                            }
                        </script>
                    </div>
            </div>
        </div>
    </div>
    <br />

    <br />

    <!-- Modal -->
    <div class="modal fade" id="commentsModal" tabindex="-1" role="dialog" aria-labelledby="commentsModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title modal-text" id="commentsModalLabel">Contact @toUserFullName</h4>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("LeaveAComment", "Account", new { fromUser = User.Identity.Name, toUsername = Model.targetUser.UserName }, FormMethod.Post, new { id = "form" }))
                    {
                        <p class="modal-text">Hi @Model.targetUser.FirstName,</p>
                        <!--This is where the user types in their message-->
                        @Html.TextAreaFor(model => model.comment,
                            new
                            {
                                @class = "form-control col-md-12",
                                @style = "min-width: 100%; resize:none; max-height:80px;",
                                @placeholder = "Type your comments here.",
                                @rows = "4"
                            })
                    }
                </div>
                <div class="modal-footer modal-text">
                    <!--Cancel and submit buttons. Not sure if it should be a button or just input-->
                    <div class="col-xs-12" style="padding-top:10px;">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <input id="btnSubmit" class="btn btn-primary" type="submit" value="Send" />
                    </div>
                    <script type="text/javascript">
                        document.getElementById("btnSubmit").onclick = function () {
                            var form = document.getElementById("form");
                            form.submit();
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
    <br />

    <br />
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/Content/css")
    <link href="@Url.Content("~/Content/Home.css")" rel="stylesheet" type="text/css" />
}